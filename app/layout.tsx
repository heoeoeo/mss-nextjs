import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { ThemeProvider } from "config/material-tailwind-theme-provider";
import ReactQueryClientProvider from "config/ReactQueryClientProvider";
import RecoilProvider from "config/RecoilProvider";
import Auth from "components/auth";
import MainLayout from "components/layout/MainLayout";
import { createServerSupabaseClient } from "utils/supabase/server";
import AuthProvider from "config/authProvider";
import AppProvider from "config/AppProvider";
import Footer from "components/layout/Footer";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const supabase = await createServerSupabaseClient();

  const {
    data: { session },
  } = await supabase.auth.getSession();

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased font-medium`}
      >
        <AppProvider accessToken={session?.access_token}>
          {session?.user ? <MainLayout>{children}</MainLayout> : <Auth />}
          <Footer />
        </AppProvider>
      </body>
    </html>
  );

  // return (
  //   <RecoilProvider>
  //     <html lang="en">
  //       <AuthProvider accessToken={session?.access_token}>
  //         <body
  //           className={`${geistSans.variable} ${geistMono.variable} antialiased`}
  //         >
  //           <ReactQueryClientProvider>
  //             <ThemeProvider>
  //               {session?.user ? <MainLayout>{children}</MainLayout> : <Auth />}
  //             </ThemeProvider>
  //           </ReactQueryClientProvider>
  //         </body>
  //       </AuthProvider>
  //     </html>
  //   </RecoilProvider>
  // );
}
